[metadata]
name = njab
version = 0.0.2
description = not Just Another Biomarker
long_description = file: README.md
long_description_content_type = text/markdown
author = Henry Webel
author_email = "Henry Webel" <henry.webel@cpr.ku.dk>
license = MIT
license_files = LICENSE
classifiers =
    License :: OSI Approved :: MIT License
    Intended Audience :: Healthcare Industry
    Intended Audience :: Science/Research
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Bio-Informatics

[options]
requires_python = ">=3.8"
package_dir =
    =src
packages = find:
include_package_data = False
install_requires =
    omegaconf
    lifelines
    numpy
    pandas
    scikit-learn
    statsmodels
    umap-learn
    matplotlib
    mrmr_selection
    pingouin
    seaborn

[options.extras_require]
docs =
    sphinx
    sphinx-book-theme
    myst-nb

[options.packages.find]
where = src
exclude =
    test*

[yapf]
based_on_style = pep8

######################
# Tool configuration #
######################

[mypy]
python_version = 3.8
warn_unused_configs = True
show_error_context = True
pretty = True
namespace_packages = True
check_untyped_defs = True

[flake8]
max-line-length = 120

[tool:pytest]
testpaths = test
addopts = --cov --strict-markers
xfail_strict = True

[coverage:run]
source = njab
branch = True

[coverage:report]
show_missing = True
skip_covered = True

[coverage:paths]
source =
    src/njab
    */site-packages/njab

#########################
# Tox env configuration #
#########################

[tox:tox]
envlist = py38
isolated_build = True

[testenv]
deps =
    pytest
    pytest-cov
commands =
    pytest {posargs}

[testenv:typecheck]
deps =
    mypy
    pytest
    types-termcolor
commands =
    mypy --ignore-missing-imports {posargs:src test}

[testenv:format]
skip_install = True
deps =
    yapf
    toml
commands =
    yapf --version
    yapf {posargs:--recursive --diff src test}


[testenv:format-in-place]
skip_install = True
deps =
    yapf
    toml
commands =
    yapf --version
    yapf {posargs:--recursive --in-place src test}

[testenv:lint]
skip_install = True
deps =
    flake8
    flake8-bugbear
commands =
    flake8 {posargs:src test}

[testenv:docs]
deps =
    sphinx
    sphinx-book-theme
commands =
    sphinx-apidoc \
        --force \
        --implicit-namespaces \
        --module-first \
        --separate \
        -o docs/reference/ \
        src/njab/ 
    sphinx-build -n -W --keep-going -b html docs/ docs/_build/

[testenv:devdocs]
deps =
    sphinx
    sphinx-autobuild
    sphinx-book-theme
commands =
    sphinx-apidoc \
        --force \
        --implicit-namespaces \
        --module-first \
        --separate \
        -o docs/reference/ \
        src/njab/
    sphinx-autobuild -n -W -b html docs/ docs/_build/